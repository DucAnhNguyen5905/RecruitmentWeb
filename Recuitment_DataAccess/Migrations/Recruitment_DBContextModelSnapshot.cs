// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Recuitment_DataAccess.EFCore;

#nullable disable

namespace Recuitment_DataAccess.Migrations
{
    [DbContext(typeof(Recruitment_DBContext))]
    partial class Recruitment_DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JobKeywordJobPost", b =>
                {
                    b.Property<int>("JobKeywordsJob_Keywords_ID")
                        .HasColumnType("int");

                    b.Property<int>("JobPostsPost_ID")
                        .HasColumnType("int");

                    b.HasKey("JobKeywordsJob_Keywords_ID", "JobPostsPost_ID");

                    b.HasIndex("JobPostsPost_ID");

                    b.ToTable("PostKeyword", (string)null);
                });

            modelBuilder.Entity("Recuitment_DataAccess.Data_Object.Employer", b =>
                {
                    b.Property<int>("Employer_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Employer_ID"));

                    b.Property<string>("Avartar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Benefits_ID")
                        .HasColumnType("int");

                    b.Property<string>("Company_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status_ID")
                        .HasColumnType("int");

                    b.HasKey("Employer_ID");

                    b.ToTable("Employer");
                });

            modelBuilder.Entity("Recuitment_DataAccess.Data_Object.JobKeyword", b =>
                {
                    b.Property<int>("Job_Keywords_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Job_Keywords_ID"));

                    b.Property<string>("Keywords")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Job_Keywords_ID");

                    b.ToTable("JobKeyword");
                });

            modelBuilder.Entity("Recuitment_DataAccess.Data_Object.JobPost", b =>
                {
                    b.Property<int>("Post_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Post_ID"));

                    b.Property<int>("CV_Language_ID")
                        .HasColumnType("int");

                    b.Property<int>("Company_ID")
                        .HasColumnType("int");

                    b.Property<int>("Contact_type_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("Employer_ID")
                        .HasColumnType("int");

                    b.Property<int>("Job_Category_ID")
                        .HasColumnType("int");

                    b.Property<string>("Job_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Job_Location_ID")
                        .HasColumnType("int");

                    b.Property<int>("Job_Position_ID")
                        .HasColumnType("int");

                    b.Property<string>("Job_Requirements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Job_Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Job_Type_ID")
                        .HasColumnType("int");

                    b.Property<int>("Salary_max")
                        .HasColumnType("int");

                    b.Property<int>("Salary_min")
                        .HasColumnType("int");

                    b.HasKey("Post_ID");

                    b.ToTable("JobPost");
                });

            modelBuilder.Entity("JobKeywordJobPost", b =>
                {
                    b.HasOne("Recuitment_DataAccess.Data_Object.JobKeyword", null)
                        .WithMany()
                        .HasForeignKey("JobKeywordsJob_Keywords_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Recuitment_DataAccess.Data_Object.JobPost", null)
                        .WithMany()
                        .HasForeignKey("JobPostsPost_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
